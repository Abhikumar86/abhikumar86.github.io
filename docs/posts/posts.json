[
  {
    "path": "posts/2021-10-16-rgee-composites/",
    "title": "Deriving Spectral Indices with Google Earth Engine in R",
    "description": "In this post, I have derived several spectral indices from Sentinel-2 data using Google Earth Engine in `R` with package `rgee`.",
    "author": [
      {
        "name": "Abhishek Kumar",
        "url": "https://akumar.netlify.app/"
      }
    ],
    "date": "2021-10-16",
    "categories": [
      "R",
      "rgee",
      "Remote Sensing",
      "Google Earth Engine"
    ],
    "contents": "\r\n\r\nContents\r\nIntroduction\r\nData and Pre-processing\r\nMedian true color composite\r\nMedian false color composite\r\nSpectral Indices\r\n\r\n\r\n\r\nShow code\r\n\r\n## set global options for markdown\r\nknitr::opts_chunk$set(comment = \"#>\", collapse = TRUE, fig.align = 'center',\r\n          fig.width = 7, fig.height = 5, out.width = '90%', dev = \"svglite\",\r\n          echo=T, message=FALSE, warning=FALSE)\r\n\r\n\r\n\r\nIntroduction\r\nGoogle Earth Engine (GEE) is a cloud-based platform for planetary-scale geo-spatial analysis (Gorelick et al. 2017). The cloud-based computation ability overcomes the limitations of data access, data storage, personal limited computation ability and time. Thus, it provides a platform for large scale analysis of earth observations through access to satellite imagery.\r\nGoogle offered support only for Python and JavaScript, and GEE was not accessible to R (R Core Team 2021) users until Aybar et al. (2020) developed rgee package (Aybar 2021).\r\n\r\n\r\nShow code\r\n\r\nlibrary(rgee)\r\nee_Initialize()\r\n\r\n#knitr::write_bib(x = c(.packages(), \"blogdown\"), \"packages.bib\")\r\n\r\n\r\n\r\nData and Pre-processing\r\nData Product: Sentinel-2 MSI: MultiSpectral Instrument, Level-2A\r\nSentinel-2 is a wide-swath, high-resolution, multi-spectral imaging mission supporting Copernicus Land Monitoring studies, including the monitoring of vegetation, soil and water cover, as well as observation of inland waterways and coastal areas. The SENTINEL-2 data contain 13 spectral bands representing TOA reflectance scaled by 10000.\r\n\r\n\r\nShow code\r\n\r\n# define a region of interest\r\nroi <- ee$Geometry$Rectangle(76.85, 30.66, 77.01, 30.75)\r\n\r\n# load and pre-process sentinel-2 data\r\n# Filter the image collection\r\nimg <- ee$ImageCollection(\"COPERNICUS/S2_SR\")$\r\n  \r\n  # filter the date range we are interested in\r\n  filterDate(\"2020-01-01\", \"2020-12-31\")$\r\n  \r\n  # filter geographic area we are interested in \r\n  filterBounds(roi)$\r\n  \r\n  # filter cloud cover less than 20%\r\n  filter(ee$Filter$lt(\"CLOUD_COVERAGE_ASSESSMENT\", 20))$\r\n  \r\n  # filter cloud pixel percentage to less than 20%\r\n  filter(ee$Filter$lt(\"CLOUDY_PIXEL_PERCENTAGE\", 20))$\r\n  \r\n  # reduce image collection by taking median value\r\n  median()$\r\n  \r\n  # clip to region of interest\r\n  clip(roi)\r\n\r\n# print band names\r\nimg$bandNames()$getInfo()\r\n\r\n\r\n#>  [1] \"B1\"         \"B2\"         \"B3\"         \"B4\"         \"B5\"        \r\n#>  [6] \"B6\"         \"B7\"         \"B8\"         \"B8A\"        \"B9\"        \r\n#> [11] \"B11\"        \"B12\"        \"AOT\"        \"WVP\"        \"SCL\"       \r\n#> [16] \"TCI_R\"      \"TCI_G\"      \"TCI_B\"      \"MSK_CLDPRB\" \"MSK_SNWPRB\"\r\n#> [21] \"QA10\"       \"QA20\"       \"QA60\"\r\n\r\nMedian true color composite\r\n\r\n\r\nShow code\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(img, \r\n             visParams = list(min = 0, max = 3000, bands = c(\"B4\", \"B3\", \"B2\")),\r\n             name = \"true color\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/dd1f19f98dd9586ef5df38aea2392eda-ec74506196c7b32d9834d3ea590ec186/tiles/{z}/{x}/{y}\",\"true color\",\"true color\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"true color\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nMedian false color composite\r\n\r\n\r\nShow code\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(img, \r\n             visParams = list(min = 0, max = 3000, bands = c(\"B8\", \"B4\", \"B3\")),\r\n             name = \"false color\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/042decd274fc5590dea550df795bf98a-353ca3b322ba68adf63bb0fb1fb5dc25/tiles/{z}/{x}/{y}\",\"false color\",\"false color\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"false color\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nSpectral Indices\r\nVegetation cover\r\nNDVI: Normalized Difference Vegetation Index\r\n\r\n\r\nShow code\r\n\r\n# calculate indices e.g. NDVI\r\nndvi <- img$expression(\r\n  expression = \"(NIR - RED)/(NIR + RED)\",\r\n  opt_map = list(\"RED\" = img$select(\"B4\"),\r\n                 \"NIR\" = img$select(\"B8\")\r\n                 ))$rename(\"ndvi\")\r\n\r\nvis_pal <- c('FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718', \r\n             '74A901', '66A000', '529400', '3E8601', '207401', '056201',\r\n             '004C00', '023B01', '012E01', '011D01', '011301')\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(ndvi, \r\n             visParams = list(min = 0, max = 1, palette = vis_pal),\r\n             name = \"NDVI\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/cd377115775034bd4eb0597ad57dfdce-5479fe5678af2acb67b5776ab2fe6785/tiles/{z}/{x}/{y}\",\"NDVI\",\"NDVI\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"NDVI\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nNDVIre: Normalized Difference Vegetation Index red-edge\r\n\r\n\r\nShow code\r\n\r\nndvire <- img$expression(\r\n  expression = \"(RedEdge1 - RED)/(RedEdge1 + RED)\",\r\n  opt_map = list(\"RED\" = img$select(\"B4\"),\r\n                 \"RedEdge1\" = img$select(\"B5\")\r\n                 ))$rename(\"ndvire\")\r\n\r\nvis_pal <- c('FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718', \r\n             '74A901', '66A000', '529400', '3E8601', '207401', '056201',\r\n             '004C00', '023B01', '012E01', '011D01', '011301')\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(ndvire, \r\n             visParams = list(min = 0, max = 1, palette = vis_pal),\r\n             name = \"NDVIre\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/ad7ca9bbcd1bd5f9e06eca45f1c12981-c083c58851cedbe3207fd12b2305ab74/tiles/{z}/{x}/{y}\",\"NDVIre\",\"NDVIre\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"NDVIre\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nEVI: Enhanced vegetation Index\r\n\r\n\r\nShow code\r\n\r\n# calculate EVI\r\nevi <- img$expression(\r\n  expression = \"2.5 * ((NIR - RED) / (NIR + 6 * RED - 7.5 * BLUE + 10000))\",\r\n  opt_map = list(\"BLUE\" = img$select(\"B2\"),\r\n                 \"RED\" = img$select(\"B4\"),\r\n                 \"NIR\" = img$select(\"B8\")\r\n                 ))$rename(\"evi\")\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(evi, \r\n             visParams = list(palette = vis_pal),\r\n             name = \"EVI\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/3f36bdcf44609fd60e81e61e4ae8985b-a68331e45b9c8a4ff1afa0980b5f66c0/tiles/{z}/{x}/{y}\",\"EVI\",\"EVI\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"EVI\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nSAVI: Soil-adjusted Vegetation Index\r\n\r\n\r\nShow code\r\n\r\nsavi <- img$expression(\r\n  expression = \"((NIR - RED) / (NIR + RED + 0.5)) * 1.5\",\r\n  opt_map = list(\"RED\" = img$select(\"B4\")$multiply(0.0001),\r\n                 \"NIR\" = img$select(\"B8\")$multiply(0.0001)\r\n                 ))$rename(\"savi\")\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(savi, \r\n             visParams = list(min = 0, max = 0.5, \r\n                              palette = c(\"brown\", \"yellow\", \"green\")),\r\n             name = \"SAVI\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/08d1372459ee6eabc484a35df148ea93-1eb4f0a639a5c3ce809c58b9918a87c6/tiles/{z}/{x}/{y}\",\"SAVI\",\"SAVI\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"SAVI\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nWater bodies\r\nNBR/NDWI: Normalized Burn Ratio / Normalized Difference Water Index\r\n\r\n\r\nShow code\r\n\r\nndwi <- img$expression(\r\n  expression = \"(NIR - SWIR) / (NIR + SWIR)\",\r\n  opt_map = list(\"NIR\" = img$select(\"B8\"),\r\n                 \"SWIR\" = img$select(\"B12\")\r\n                 ))$rename(\"ndwi\")\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(ndwi, \r\n             visParams = list(min = 0, max = 0.5, \r\n                              palette = c(\"blue\", \"white\", \"green\")),\r\n             name = \"NDWI\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/bf6a3f4365654f0c79a00906eff8b5e8-c0d3ca96f4e0dd50fa06867893b60a4f/tiles/{z}/{x}/{y}\",\"NDWI\",\"NDWI\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"NDWI\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nMNDWI: Modified Normalized Difference Water Index\r\n\r\n\r\nShow code\r\n\r\nmndwi <- img$expression(\r\n  expression = \"(GREEN - SWIR1) / (GREEN + SWIR1)\",\r\n  opt_map = list(\"GREEN\" = img$select(\"B3\"),\r\n                 \"SWIR1\" = img$select(\"B11\")\r\n                 ))$rename(\"mndwi\")\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(ndwi, \r\n             visParams = list(min = 0, max = 0.5, \r\n                              palette = c(\"blue\", \"white\", \"green\")),\r\n             name = \"MNDWI\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/bf6a3f4365654f0c79a00906eff8b5e8-9b75b4741b3fae0a3d6a97002fefc26e/tiles/{z}/{x}/{y}\",\"MNDWI\",\"MNDWI\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"MNDWI\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nAWEI_sh: Automated Water Extraction Index - shadow\r\n\r\n\r\nShow code\r\n\r\naweish <- img$expression(\r\n  expression = \"BLUE + 2.5 * GREEN - 1.5 * (NIR + SWIR1) - 0.25 * SWIR2\",\r\n  opt_map = list(\"BLUE\" = img$select(\"B2\"),\r\n                 \"GREEN\" = img$select(\"B3\"),\r\n                 \"NIR\" = img$select(\"B8\"),\r\n                 \"SWIR1\" = img$select(\"B11\"),\r\n                 \"SWIR2\" = img$select(\"B12\")\r\n                 ))$rename(\"aweish\")\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(aweish, \r\n             visParams = list(min = 0, max = 1, palette = c(\"white\", \"blue\")),\r\n             name = \"AWEIsh\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/cc63b6b2e74bdd7f5ecf4cb8474fb030-6af79591735b7a1b710926c7e72b4d1b/tiles/{z}/{x}/{y}\",\"AWEIsh\",\"AWEIsh\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"AWEIsh\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nBuilt up areas\r\nNDBI: Normalized Difference Built-up Index\r\n\r\n\r\nShow code\r\n\r\nndbi <- img$expression(\r\n  expression = \"(SWIR1 - NIR) / (SWIR1 + NIR)\",\r\n  opt_map = list(\"NIR\" = img$select(\"B8\"),\r\n                 \"SWIR1\" = img$select(\"B11\")\r\n                 ))$rename(\"ndbi\")\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(ndbi, \r\n             visParams = list(min = -1, max = 1, palette = c(\"white\", \"brown\")),\r\n             name = \"NDBI\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/070041ded291ed580a24d4b393f88c4a-c0b6e8d3eabfb3382018d395a7b96b3c/tiles/{z}/{x}/{y}\",\"NDBI\",\"NDBI\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"NDBI\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nBUI: Built-up Index\r\n\r\n\r\nShow code\r\n\r\nbui <- img$expression(\r\n  expression = \"((SWIR1 - NIR) / (SWIR1 + NIR)) - ((NIR - RED)/(NIR + RED))\",\r\n  opt_map = list(\"RED\" = img$select(\"B4\"),\r\n                 \"NIR\" = img$select(\"B8\"),\r\n                 \"SWIR1\" = img$select(\"B11\")\r\n                 ))$rename(\"bui\")\r\n\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(bui, \r\n             visParams = list(min = -1, max = 0.5, palette = c(\"green\", \"white\", \"brown\")),\r\n             name = \"BUI\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/17edfcc5514a7bda0badd5df4cf117f2-0d181ad3ce419b19d42346c281c0e60d/tiles/{z}/{x}/{y}\",\"BUI\",\"BUI\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"BUI\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nSoil related Indices\r\nNDTI: Normalized Difference Tillage Index\r\n\r\n\r\nShow code\r\n\r\nndti <- img$expression(\r\n  expression = \"(SWIR1 - SWIR2) / (SWIR1 + SWIR2)\",\r\n  opt_map = list(\"SWIR1\" = img$select(\"B11\"),\r\n                 \"SWIR2\" = img$select(\"B12\")\r\n                 ))$rename(\"ndti\")\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(ndti, \r\n             visParams = list(min = 0, max = 0.5, palette = c(\"brown\", \"yellow\", \"green\")),\r\n             name = \"NDTI\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/918f8320b8d5d60b7069d4648eff7e63-4866c5446568bc31eec5e791ec010f7a/tiles/{z}/{x}/{y}\",\"NDTI\",\"NDTI\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"NDTI\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\nBSI: Bare Soil Index\r\n\r\n\r\nShow code\r\n\r\nbsi <- img$expression(\r\n  expression = \"(((SWIR1 + RED) - (NIR + BLUE)) / (SWIR1 + RED)) + (NIR + BLUE)\",\r\n  opt_map = list(\"BLUE\" = img$select(\"B2\"),\r\n                 \"RED\" = img$select(\"B4\"),\r\n                 \"NIR\" = img$select(\"B8\"),\r\n                 \"SWIR1\" = img$select(\"B11\"),\r\n                 \"SWIR2\" = img$select(\"B12\")\r\n                 ))$rename(\"bsi\")\r\n\r\nMap$centerObject(roi, 12)\r\nMap$addLayer(bsi, \r\n             visParams = list(min = 1000, max = 4000, palette = c(\"white\", \"brown\")),\r\n             name = \"BSI\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],[],{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addTiles\",\"args\":[\"https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/0bac16c9d5f4ee9a413344b71b7fcd19-6b4469958bb4842c0cfcc85c6e5f9d98/tiles/{z}/{x}/{y}\",\"BSI\",\"BSI\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"OpenStreetMap\",\"CartoDB.DarkMatter\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"BSI\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"hideGroup\",\"args\":[null]}],\"setView\":[[30.7050175238026,76.9299999999991],12,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}\r\n\r\n\r\n\r\nAybar, Cesar. 2021. rgee: R Bindings for Calling the Earth Engine API. https://CRAN.R-project.org/package=rgee.\r\n\r\n\r\nAybar, Cesar, Qiusheng Wu, Lesly Bautista, Roy Yali, and Antony Barja. 2020. “rgee: An R Package for Interacting with Google Earth Engine.” Journal of Open Source Software 5 (51): 2272. https://doi.org/10.21105/joss.02272.\r\n\r\n\r\nGorelick, Noel, Matt Hancher, Mike Dixon, Simon Ilyushchenko, David Thau, and Rebecca Moore. 2017. “Google Earth Engine: Planetary-Scale Geospatial Analysis for Everyone” 202 (December): 18–27. https://doi.org/10.1016/j.rse.2017.06.031.\r\n\r\n\r\nR Core Team. 2021. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/.\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-10-17T12:33:56+05:30",
    "input_file": "rgee-composites.knit.md"
  },
  {
    "path": "posts/2021-10-15-mwls-climate/",
    "title": "mwls-climate",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Abhishek Kumar",
        "url": "https://akumar.netlify.app/"
      }
    ],
    "date": "2021-10-15",
    "categories": [],
    "contents": "\r\nAbstract\r\nIntroduction\r\nMethods\r\nStudy site\r\nData\r\n\r\n                  V1      V2\r\ntemperature    MODIS Landsat\r\nprecipitation CHIRPS    <NA>\r\n\r\n\r\n\r\nhtml {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\r\n}\r\n\r\n#yosoiqsfbc .gt_table {\r\n  display: table;\r\n  border-collapse: collapse;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: #333333;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  background-color: #FFFFFF;\r\n  width: auto;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #A8A8A8;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #A8A8A8;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n}\r\n\r\n#yosoiqsfbc .gt_heading {\r\n  background-color: #FFFFFF;\r\n  text-align: center;\r\n  border-bottom-color: #FFFFFF;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#yosoiqsfbc .gt_title {\r\n  color: #333333;\r\n  font-size: 125%;\r\n  font-weight: initial;\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  border-bottom-color: #FFFFFF;\r\n  border-bottom-width: 0;\r\n}\r\n\r\n#yosoiqsfbc .gt_subtitle {\r\n  color: #333333;\r\n  font-size: 85%;\r\n  font-weight: initial;\r\n  padding-top: 0;\r\n  padding-bottom: 6px;\r\n  border-top-color: #FFFFFF;\r\n  border-top-width: 0;\r\n}\r\n\r\n#yosoiqsfbc .gt_bottom_border {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#yosoiqsfbc .gt_col_headings {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#yosoiqsfbc .gt_col_heading {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 6px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#yosoiqsfbc .gt_column_spanner_outer {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n}\r\n\r\n#yosoiqsfbc .gt_column_spanner_outer:first-child {\r\n  padding-left: 0;\r\n}\r\n\r\n#yosoiqsfbc .gt_column_spanner_outer:last-child {\r\n  padding-right: 0;\r\n}\r\n\r\n#yosoiqsfbc .gt_column_spanner {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  overflow-x: hidden;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n#yosoiqsfbc .gt_group_heading {\r\n  padding: 8px;\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#yosoiqsfbc .gt_empty_group_heading {\r\n  padding: 0.5px;\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#yosoiqsfbc .gt_from_md > :first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n#yosoiqsfbc .gt_from_md > :last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n#yosoiqsfbc .gt_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  margin: 10px;\r\n  border-top-style: solid;\r\n  border-top-width: 1px;\r\n  border-top-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#yosoiqsfbc .gt_stub {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-right-style: solid;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  padding-left: 12px;\r\n}\r\n\r\n#yosoiqsfbc .gt_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#yosoiqsfbc .gt_first_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#yosoiqsfbc .gt_grand_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#yosoiqsfbc .gt_first_grand_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: double;\r\n  border-top-width: 6px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#yosoiqsfbc .gt_striped {\r\n  background-color: rgba(128, 128, 128, 0.05);\r\n}\r\n\r\n#yosoiqsfbc .gt_table_body {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#yosoiqsfbc .gt_footnotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#yosoiqsfbc .gt_footnote {\r\n  margin: 0px;\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#yosoiqsfbc .gt_sourcenotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#yosoiqsfbc .gt_sourcenote {\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#yosoiqsfbc .gt_left {\r\n  text-align: left;\r\n}\r\n\r\n#yosoiqsfbc .gt_center {\r\n  text-align: center;\r\n}\r\n\r\n#yosoiqsfbc .gt_right {\r\n  text-align: right;\r\n  font-variant-numeric: tabular-nums;\r\n}\r\n\r\n#yosoiqsfbc .gt_font_normal {\r\n  font-weight: normal;\r\n}\r\n\r\n#yosoiqsfbc .gt_font_bold {\r\n  font-weight: bold;\r\n}\r\n\r\n#yosoiqsfbc .gt_font_italic {\r\n  font-style: italic;\r\n}\r\n\r\n#yosoiqsfbc .gt_super {\r\n  font-size: 65%;\r\n}\r\n\r\n#yosoiqsfbc .gt_footnote_marks {\r\n  font-style: italic;\r\n  font-weight: normal;\r\n  font-size: 65%;\r\n}\r\nSatellite\r\n      Sensor\r\n      Temporal Coverage\r\n    Landsat 4\r\nThematic Mapper (TM)\r\n07/1982 - 12/1993Landsat 5\r\nThematic Mapper (TM)\r\n03/1984 - 01/2013Landsat 7\r\nEnhanced Thematic Mapper (ETM+)\r\n04/1999 - PresentLandsat 8\r\nOperational Land Imager (OLI) / Thermal Infrared Sensor (TIRS)\r\n02/2013 - PresentTerra\r\nAdvanced Spaceborne Thermal Emission and Reflection Radiometer(ASTER) & MODerate-resolution Imaging Spectroradiometer (MODIS)\r\n12/1999 - PresentAqua\r\nMODerate-resolution Imaging Spectroradiometer (MODIS)\r\n04/2002 - PresentInternational Space Station / ECOsystem Spaceborne Thermal Radiometer Experiment on Space Station (ECOSTRESS)\r\nPrototype HyspIRI Thermal Infrared Radiometer (PHyTIR)\r\n06/2018 - Present\r\n\r\nStatistical analysis\r\nResults\r\nWorldClim\r\nDiscussion\r\nConclusion\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-10-15T15:52:26+05:30",
    "input_file": {}
  },
  {
    "path": "posts/2021-08-27-mwls/",
    "title": "Khol Hi Raitan (Morni Hills) Wildlife Sanctuary",
    "description": "A short description and introduction to Khol Hi Raitan Wildlife Sanctuary.",
    "author": [
      {
        "name": "Abhishek Kumar",
        "url": "https://akumar.netlify.app/"
      }
    ],
    "date": "2021-08-27",
    "categories": [
      "protected areas",
      "siwaliks",
      "morni hills",
      "khol hi raitan wildlife sanctuary"
    ],
    "contents": "\r\n\r\nContents\r\nIntroduction\r\nNotification and declaration\r\nBiodiversity\r\nEcology\r\nEcological Problems\r\nThreats\r\n\r\n\r\n\r\n\r\nIntroduction\r\nVarious developmental activities and requirements of local people have brought significant ecological changes and degradation in the Siwalik Hills of the Inter State Chandigarh Region.\r\nSiwalik landscape has been identified as one of the most degraded ecosystems of India primarily due to its fragile soil resulting in heavy soil erosion. Weathering and erosion in this area has produced a variety of erosional land-form features. The seasonal streams commonly called choes run from NE to SW descend into the valleys. On an average more than 50% of the total rain in the Siwalik ends in run-off. At foothills, artificial Sukhna lake was constructed in 1958 for water storage, however, it is facing siltation problem due to erosion and sedimentation from Siwalik hills (Y. Singh 2002). The Chandigarh Siwalik hills and Morni hills are separated by the Ghaggar river (Y. Singh 2001). Tikkar taal is a natural lake at the site and known to support several diatoms (Saini, Khanagwal, and Singh 2017). Water from natural resources have been reported to contain varying amount of Uranium and Radon indicating their presence in the rocks in the area (Joga Singh et al. 2008b, 2008a, 2009). The soils also have varying degree of Uranium, Radium and Radon (Pundir, Rajinder, and Sunil 2014; Joga Singh et al. 2008b).\r\nhttp://haryanaforest.gov.in/\r\nNotification and declaration\r\nAn area of 2,226.58 ha was initially notified as R-70 Khol Hi-Raitan (KHR) Wildlife Sanctuary on 10 December 2004 with Gazette notification No. S.O. 269/C.A. 53/1972/S. 26-A/2004 by Forest Department of Government of Haryana. Later, the forest area was identified to cover a total of 2,656.38 ha and declared as wildlife sanctuary on 07 September 2007 with gazette notification No. S.O. 71/C.A. 53/1972/S.26/2007.\r\nThe eco-sensitive zone (ESZ) around KHR was proposed as area within five kilometres of the boundary on 03 June 2009 with notification No. S.O. 1394 (E).\r\n\r\n\r\n\r\nFigure 1: Ecosensitive Zone (ESZ) of Khol Hi-Raital wildlife sanctuary as drafted in September 2009. Figure from https://cdnbbsr.s3waas.gov.in/s3c5866e93cab1776890fe343c9e7063fb/uploads/2021/05/2021052022-1.jpg\r\n\r\n\r\n\r\nHowever, the proposal has been revised in another draft No. S.O. 1395 (E) dated 21 May 2015 and the ESZ has been revised to vary from zero to 925 meters only.\r\n\r\n\r\n\r\nFigure 2: Ecosensitive Zone (ESZ) of Khol Hi-Raital wildlife sanctuary as drafted in May 2015. Figure from https://moef.gov.in/wp-content/uploads/2019/10/Map-of-ESZ-of-Khol-Hi-Ratan-WLS-Haryana.pdf\r\n\r\n\r\n\r\nBiodiversity\r\nThe Morni hills are rich in diversity of flora as well as fauna. The site is inhabited by diverse group of non-primates (Chopra, Bhoombak, and Kumar 2013). As many as 156 birds can be observed at lower Siwalik foothills (Chopra and Sharma 2014).\r\nVegetation\r\nPalynostratigraphical studies of Subathu formation revealed the presence of dinoflagellates cysts, acritarch, fungal spores and ascostroma, pteridophytic spores, and pollen grains of gymnosperms and angiosperms (Sarkar and Prasad 2000). The Siwalik hills probably hosted a luxuriant vegetation in the pre-glacial times in view of rich and varied flora and fauna discovered from wide and distant localities in them. The account of the present-day flora and fauna shows that much has been lost in the last 150 years or more. Vegetation is analysed in three forest types of the site up to a limited extent previously (Rout and Gupta 1989). Several attempts have been made to document the plant diversity of the region (Jain2001?). Orchids are poorly represented and only three orchids (Habenaria plantaginea Lindl., Rhynchostylis retusa Bl. and Zeuxine strateumatica (L.) Schltr.) have been reported from Haryana state (Jain2000?; Kumar2001?). Another orchid (Eulophia dabia (D.Don) Hochr.) was later added to the state’s flora (Vij and Verma 2005). Studies have clearly shown that the vegetation of Morni hills is under threat and as many as 61 species have been disappeared since 2000 (S. Singh et al. 2014).\r\nEcosystem services\r\nLand-use changes (in terms of controlled grazing and increased agriculture), physical structures for water harvesting and vegetation (especially grasses) have significantly reduced erosion and sedimentation. Erosion control combined with land-use changes has resulted in increased the biomass productivities of agriculture, timber and fodder (Scott and Walter 1993). Further, watershed development activities have also contributed the increase in vegetation cover and reduction in soil loss due to high water runoff (O. Singh, Sharma, and Singh 2016). The local inhabitants already know that some plants are more effective in controlling soil erosion. For example, perennial Jhoond grass (Saccharum bengalense) and Bhabbar grass (Eulaliopsis binata) that is thought to be symbiotic with Khair (Acacia catechu), is used to prevent soil erosion (Scott and Walter 1993). Similarly, another plant called Jhingan (Lannea coromandelica) and vegetative barriers of Agave is used as fence for the fields and to stabilize eroding slopes, respectively (Scott and Walter 1993). The utilization various plants as a source of medicine, food, fodder, fibre, gum and dye indicate their socio-economic importance to the local people (J. Singh, Singh, and Laxmi 2017). More than 300 species from the Morni hills only are reported to be of medicinal importance (Balkrishna et al. 2018). Some of Lamiaceous plants possess anti-oxidant properties (S. Singh et al. 2014). Barberry (Berberis aristata DC.) from the hills have been implicated for dyeing the silk (Pruthi, Chawla, and Yadav 2008). Man-made disturbances especially Tourism can potentially threaten the biodiversity and ecological balance. Though tourism may offer economic development, there are also increased chances of habitat degradation and biodiversity loss (Chand 2015). Several trees of the area serve as sleeping site for near threatened Hanuman Langurs (Chopra, Bhoombak, and Kumar 2012).\r\nSoils\r\nThe Lower Shivaliks are dominated by alluvial sediments chiefly consisting of loose sand and gravel inserted with clay horizons. Soil is clay loam or silt loam and underlying rocks are soft sandstones that are prone to erosion and result in high water runoff (Rout and Gupta 1990b). The alkali soils of the region are low in organic matter and deficient in nutrients, probably due to minimal leaf litter (Kumar et al. 1995).\r\nClimate\r\nThe Siwalik Hills experience Koeppen’s Cwg category climate based on annual and monthly means of temperature and rainfall (Koeppen, 1936). The climatic data of Chandigarh suggests that the Chandigarh Siwalik Hills have BSh category climate. For general vegetation there are two major growth periods February to March (Spring) and rainy months of July and August. Leaf fall for non-evergreen vegetation is experienced during October to November (Autumn). Climate is monsoonal, average rainfall of the area is 1069 mm and major portion of the rainfall occurs during June to September. The year is divisible into three seasons, warm wet rainy season (June to September), cool dry winter season (October to March) and hot dry summer season (April to May).\r\nEcology\r\nThe forest floor litter mass, litter fall, herbaceous biomass and the nutrient content of litter showed significant seasonal variations due to site and tissues in subtropical forest ecosystems of Siwalik hills (Rout and Gupta 1990a). Litter chemical quality controls the rate of leaf-litter decomposition measured as carbon dioxide evolution rates from the soil (Rout and Gupta 1987). Attempts have been made to estimate above ground biomass using Spectral modelling (Kumar et al. 2011).\r\nEcological Problems\r\nThreats\r\nWorld Herbal Project\r\nhttps://www.business-standard.com/article/news-ani/haryana-cm-inaugurates-patanjali-s-world-herbal-forest-project-118122000628_1.html\r\nhttps://economictimes.indiatimes.com/news/politics-and-nation/haryana-signs-mou-with-patanjali-for-world-herbal-forest/articleshow/56648056.cms\r\nhttps://www.dailypioneer.com/2016/state-editions/10l-plants-of-20-varieties-to-be-planted-in-world-herbal-forest.html\r\n\r\n\r\n\r\nBalkrishna, A., A. Srivastava, B. K. Shukla, R. K. Mishra, and B. Joshi. 2018. “Effect of Chemical Composition on Leaf-Litter Decomposition in Forest Soil.” Journal of Non-Timber Forest Products 25 (1): 1–14.\r\n\r\n\r\nChand, P. 2015. “Local People’s Perceptions Toward Tourism: A Case Study of Morni Hills (Haryana).” Asia Pacific Journal of Research 1: 70–77. https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.1061.4492&rep=rep1&type=pdf.\r\n\r\n\r\nChopra, G., M. B. Bhoombak, and P. Kumar. 2012. “Selection and Shifting of Sleeping Sites by Hanuman Langurs in Morni Hills of Haryana, India.” Zoo’s Print XXVII: 19--24. http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.729.2871&rep=rep1&type=pdf.\r\n\r\n\r\n———. 2013. “Prevalence of Non-Human Primates in Morni Hills of Haryana, India: A Survey.” Tigerpaper 40: 1--9. http://www.fao.org/3/an011e/an011e.pdf.\r\n\r\n\r\nChopra, G., and S. K. Sharma. 2014. “Avian Diversity of Lower Shivalik Foothills, India.” International Journal of Research Studies in Biosciences 2: 1--12. https://www.arcjournals.org/pdfs/ijrsb/v2-i7/1.pdf.\r\n\r\n\r\nKumar, R., R. L. Ahuja, N. T. Singh, and S. K. Ghabru. 1995. “Characteristics and Classification of Alkali Soils on Siwalik Hills of Satluj-Yamuna Divide, North-West India.” Agropedology 5: 29--35. http://isslup.in/wp-content/uploads/2018/09/Characteristics-and-Classification-of-Alkali-Soils-on-Siwalik-Hills.pdf.\r\n\r\n\r\nKumar, R., S. R. Gupta, S. Singh, P. Patil, and V. K. Dhadhwal. 2011. “Spatial Distribution of Forest Biomass Using Remote Sensing and Regression Models in Northern Haryana, India.” International Journal of Ecology and Environmental Sciences 37 (1): 37–47. https://nieindia.org/Journal/index.php/ijees/article/view/14/0.\r\n\r\n\r\nPruthi, N., G. D. Chawla, and S. Yadav. 2008. “Dyeing of Silk with Barberry Bark Dye Using Mordant Combination.” Natural Product Radiance 7: 40--44. http://nopr.niscair.res.in/handle/123456789/5643.\r\n\r\n\r\nPundir, A., S. Rajinder, and K. Sunil. 2014. “Measurement of Radon Concentration and Exhalation Rates in Soil Samples of Some Districts of Haryana and Himachal in India.” Researcher 6: 71--76. https://doi.org/10.7537/marsrsj060614.14.\r\n\r\n\r\nRout, S. K., and S. R. Gupta. 1987. “Effect of Chemical Composition on Leaf-Litter Decomposition in Forest Soil.” Proceedings / Indian Academy of Sciences 97 (5): 399–404. https://doi.org/10.1007/bf03053566.\r\n\r\n\r\n———. 1989. “Analysis of Forest Vegetation of Morni Hills in Northeast Haryana.” Proceedings / Indian Academy of Sciences 99 (2): 117–26. https://doi.org/10.1007/bf03053523.\r\n\r\n\r\n———. 1990a. “Forest Floor, Litterfall and Nutrient Return in Subtropical Forest Ecosystems of Siwaliks in Northern India. I. Forest Floor Litter and Herbaceous Biomass.” Flora 184 (5): 325–39. https://doi.org/10.1016/s0367-2530(17)31631-6.\r\n\r\n\r\n———. 1990b. “Forest Floor, Litterfall and Nutrient Return in Subtropical Forest Ecosystems of Siwaliks in Northern India II. Litterfall Pattern and Nutrient Turnover Rates.” Flora 184 (6): 405–21. https://doi.org/10.1016/s0367-2530(17)31643-2.\r\n\r\n\r\nSaini, Ekta, V. P. Khanagwal, and Rajvinder Singh. 2017. “A Systematic Databasing of Diatoms from Different Geographical Localities and Sites of Haryana for Advancing Validation of Forensic Diatomology.” Data in Brief 10 (February): 63–68. https://doi.org/10.1016/j.dib.2016.11.072.\r\n\r\n\r\nSarkar, S., and V. Prasad. 2000. “Palynostratigraphy and Depositional Environment of the Subathu Formation (Late Ypresian-Middle Lutetian), Morni Hills, Haryana, India.” Journal of the Palaeontological Society of India 45: 137--149. http://www.palaeontologicalsociety.in/vol45/v9.pdf.\r\n\r\n\r\nScott, Christopher Anand, and Michael F. Walter. 1993. “Local Knowledge and Conventional Soil Science Approaches to Erosional Processes in the Shivalik Himalaya.” Mountain Research and Development 13 (1): 61–72. https://doi.org/10.2307/3673644.\r\n\r\n\r\nSingh, J., A. Singh, and V. Laxmi. 2017. “Appraisal of Non-Timber Forest Products in Morni and Raipur Rani Ranges of Shivalik Hills, India.” International Journal of Forest Usufructs Management 18: 2--13.\r\n\r\n\r\nSingh, Joga, Harmanjit Singh, Surinder Singh, and B. S. Bajwa. 2008a. “Estimation of Uranium and Radon Concentration in Some Drinking Water Samples.” Radiation Measurements 43: S523–26. https://doi.org/10.1016/j.radmeas.2008.04.004.\r\n\r\n\r\n———. 2008b. “Estimation of Uranium and Radon Concentration in Some Drinking Water Samples of Upper Siwaliks, India.” Environmental Monitoring and Assessment 154 (1-4): 15–22. https://doi.org/10.1007/s10661-008-0373-8.\r\n\r\n\r\n———. 2009. “Uranium, Radium and Radon Exhalation Studies in Some Soil Samples Using Plastic Track Detectors.” Indian Journal of Physics 83 (8): 1147–53. https://doi.org/10.1007/s12648-009-0094-z.\r\n\r\n\r\nSingh, Omvir, Tejpal Sharma, and Jagdeep Singh. 2016. “Farmers’ Perceptions and Satisfaction Levels on the Performance of Watershed Development Activities in the Morni Hill Area of the Siwalik Himalayas in India.” Human Ecology 44 (1): 91–104. https://doi.org/10.1007/s10745-015-9801-x.\r\n\r\n\r\nSingh, S., D. R. Batish, R. K. Kohli, and H. P. Singh. 2014. “An Evaluation of the Antioxidant Properties of Some Oil Yielding Lamiaceous Plants from Morni Hills (Haryana, India ).” International Journal of Pharmacognosy 1: 640--645. https://doi.org/10.13040/IJPSR.0975-8232.IJP.1(10).640-45.\r\n\r\n\r\nSingh, Y. 2001. “Geo-Ecology of the Trans Satluj Punjab - Haryana Siwalik Hills, NW India.” ENVIS Bulletin: Himalayan Ecology and Development 9: 19--38. http://gbpihedenvis.nic.in/ENVIS%20Bullitin/Vol.%209/vol9_2.PDF.\r\n\r\n\r\n———. 2002. “Siltation Problems in Sukhna Lake in Chandigarh, NW India and Comments on Geohydrological Changes in the Yamuna-Satluj Region.” ENVIS Bulletin: Himalayan Ecology and Development 10: 18--31. http://www.indiaenvironmentportal.org.in/files/sukhna%20lake.pdf.\r\n\r\n\r\nVij, S. P., and J. Verma. 2005. “Eulophia Dabia (d.don) Hochr.: A New Orchid Record for Haryana State, India.” Journal of the Orchid Society of India 19: 47--49.\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-08-27-mwls/data/map.png",
    "last_modified": "2021-10-13T21:13:05+05:30",
    "input_file": {},
    "preview_width": 2400,
    "preview_height": 1800
  },
  {
    "path": "posts/2021-08-22-rgee-veg-indices/",
    "title": "Google Earth Engine in R",
    "description": "Google Earth Engine in `R` with package `rgee`",
    "author": [
      {
        "name": "Abhishek Kumar",
        "url": "https://akumar.netlify.app/"
      }
    ],
    "date": "2021-08-22",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nSet up Google Earth Engine in R\r\nPrecipitation from TerraClimate\r\nNDVI animation from MODIS\r\nAcknowledgements\r\n\r\n\r\n\r\nShow code\r\n\r\nknitr::include_graphics(\"data/pkl-ndvi.gif\")\r\n\r\n\r\n\r\n\r\nSet up Google Earth Engine in R\r\n\r\n\r\nShow code\r\n\r\n## load the package\r\n#library(rgee)\r\n\r\n## initially run once to set up rgee\r\n#ee_install(py_env = \"rgee\")\r\n\r\n#reticulate::py_install(packages = 'earthengine-api', \r\n#envname = 'C:/Users/ARVIND/AppData/Local/r-miniconda/envs/rgee')\r\n\r\n## check for proper set up for rgee installation and dependencies\r\n#ee_check() # Check non-R dependencies\r\n#ee_clean_credentials() # Remove credentials of a specific user\r\n#ee_clean_pyenv() # Remove reticulate system variables\r\n\r\n## Initialize Earth Engine!\r\n#ee_Initialize()\r\n\r\n#srtm <- ee$Image(\"USGS/SRTMGL1_003\") \r\n\r\n\r\n\r\nPrecipitation from TerraClimate\r\n\r\n\r\nShow code\r\n\r\nlibrary(rgee)\r\nlibrary(sf)\r\nlibrary(tidyverse)\r\n\r\nee_Initialize()\r\n\r\n\r\n-- rgee 1.1.0 ----------------------------- earthengine-api 0.1.283 -- \r\n v user: not_defined\r\n v Initializing Google Earth Engine:\r\n v Initializing Google Earth Engine:  DONE!\r\n\r\n v Earth Engine account: users/abhikumarpu \r\n---------------------------------------------------------------------- \r\n\r\nShow code\r\n\r\n## read the boundary for MHWLS (area of interest)\r\nmwls <- st_read(\"data/elev_band.gpkg\") |> sf_as_ee()\r\n\r\n\r\nReading layer `elv_band' from data source \r\n  `D:\\R\\abhikumar86.github.io\\_posts\\2021-08-22-rgee-veg-indices\\data\\elev_band.gpkg' \r\n  using driver `GPKG'\r\nSimple feature collection with 5 features and 2 fields\r\nGeometry type: MULTIPOLYGON\r\nDimension:     XY\r\nBounding box:  xmin: 76.88181 ymin: 30.67097 xmax: 76.99986 ymax: 30.73847\r\nGeodetic CRS:  WGS 84\r\n\r\nShow code\r\n\r\n## Map each image from 2019 to extract the monthly precipitation (Pr)\r\nterraclimate <- ee$ImageCollection(\"IDAHO_EPSCOR/TERRACLIMATE\") |>\r\n  \r\n  ## filter date\r\n  ee$ImageCollection$filterDate(\"2019-01-01\", \"2020-01-01\") |>\r\n  \r\n  ## Select only precipitation bands\r\n  ee$ImageCollection$map(function(x) x$select(\"pr\")) |> \r\n  \r\n  ## from imagecollection to image\r\n  ee$ImageCollection$toBands()\r\n  \r\n  ## rename the bands of an image\r\n  #ee$Image$rename(sprintf(\"PP_%02d\", 1:12))\r\n\r\n## extract precipitation values for area of interest\r\nee_mwls_rain <- ee_extract(x = terraclimate, y = mwls, sf = FALSE)\r\n\r\n\r\nee_mwls_rain |>\r\n  pivot_longer(-c(1:2), names_to = \"date\", values_to = \"pr\") |>\r\n  mutate(date = gsub(\"_pr\", \"\", date)) |>\r\n  mutate(date = gsub(\"X\", \"\", date)) |>\r\n  mutate(year = substr(date, 1, 4), month = substr(date, 5, 6)) |>\r\n  mutate(date = paste(year, month, \"01\", sep = \"-\")) |>\r\n  ggplot(aes(x = as.Date(date), y = pr, group = elev_zone, color = elev_zone)) +\r\n  geom_line(alpha = 0.4, lwd = 1) +\r\n  scale_color_discrete(name = \"Elevation (m)\") +\r\n  #facet_wrap(.~elev_zone) +\r\n  xlab(\"Time\") +\r\n  ylab(\"Precipitation (mm)\") +\r\n  theme_bw() #+\r\n\r\n\r\n\r\nShow code\r\n\r\n  #theme(legend.position = c(0.85, 0.25))\r\n\r\nrm(list = ls())\r\n\r\n\r\n\r\nNDVI animation from MODIS\r\n\r\n\r\nShow code\r\n\r\n## Define the regional bounds of animation frames and a mask to clip the NDVI data by.\r\npkl <- st_read(\"data/Panchkula.gpkg\") |> sf_as_ee()\r\nregion <- pkl$geometry()$bounds()\r\n\r\n## Retrieve the MODIS Terra Vegetation Indices 16-Day Global 1km dataset as \r\n## an ee.ImageCollection and select the NDVI band.\r\ncol <- ee$ImageCollection('MODIS/006/MOD13A2')$select('NDVI')\r\n\r\n## Group images by composite date\r\ncol <- col$map(function(img) {\r\n  doy <- ee$Date(img$get('system:time_start'))$getRelative('day', 'year')\r\n  img$set('doy', doy)\r\n})\r\ndistinctDOY <- col$filterDate('2019-01-01', '2020-01-01')\r\n\r\n## Define a filter that identifies which images from the complete collection\r\n## match the DOY from the distinct DOY collection.\r\nfilter <- ee$Filter$equals(leftField = 'doy', rightField = 'doy')\r\n\r\n## Define a join; convert the resulting FeatureCollection to an ImageCollection.\r\njoin <- ee$Join$saveAll('doy_matches')\r\njoinCol <- ee$ImageCollection(join$apply(distinctDOY, col, filter))\r\n\r\n\r\n## Apply median reduction among matching DOY collections.\r\ncomp <- joinCol$map(function(img) {\r\n  doyCol = ee$ImageCollection$fromImages(\r\n    img$get('doy_matches')\r\n  )\r\n  doyCol$reduce(ee$Reducer$median())\r\n})\r\n\r\n## Define RGB visualization parameters.\r\nvisParams = list(\r\n  min = 0.0,\r\n  max = 9000.0,\r\n  bands = \"NDVI_median\",\r\n  palette = c(\r\n    'FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718', '74A901',\r\n    '66A000', '529400', '3E8601', '207401', '056201', '004C00', '023B01',\r\n    '012E01', '011D01', '011301'\r\n  )\r\n)\r\n\r\n## Create RGB visualization images for use as animation frames.\r\nrgbVis <- comp$map(function(img) {\r\n  do.call(img$visualize, visParams) |>\r\n    ee$Image$clip(pkl)\r\n})\r\n\r\n## Define GIF visualization parameters.\r\ngifParams <- list(\r\n  region = region,\r\n  dimensions = 600,\r\n  crs = 'EPSG:4326',\r\n  framesPerSecond = 10\r\n)\r\n\r\n## Get month names\r\ndates_modis_mabbr <- distinctDOY |>\r\n  ee_get_date_ic() |> # Get Image Collection dates\r\n  select(time_start) |> # Select time_start column\r\n  # Get the month component of the datetime\r\n  mutate(month = lubridate::month(as.POSIXlt(x = time_start, format=\"%Y-%m-%d\"))) |> \r\n  mutate(months = month.abb[month]) |>\r\n  select(months)\r\n\r\n# url for animation\r\nprint(rgbVis$getVideoThumbURL(gifParams))\r\n\r\n\r\n\r\n\r\n\r\nShow code\r\n\r\nknitr::include_graphics(\"data/pkl-ndvi.gif\")\r\n\r\n\r\n\r\n\r\nAcknowledgements\r\nhttps://csaybar.github.io/rgee-examples/\r\nhttps://r-spatial.github.io/rgee/\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-08-22-rgee-veg-indices/rgee-veg-indices_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2021-10-12T19:40:36+05:30",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-07-21-3d-map/",
    "title": "3d-map",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Abhishek Kumar",
        "url": "https://akumar.netlify.app"
      }
    ],
    "date": "2021-08-21",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nload the reuired packages\r\n\r\nThe R package rayshader uses different hill shading techniques by calculating a colour for each point on the surface using:\r\nA direct elevation-to-colour mapping: height_shade()\r\nThe surface normals and hemispherical UV mapping: sphere_shade()\r\nLambert Shading Mapping by calculating the dot product between light direction and the surface normal vector: lamb_shade()\r\nshadows calculated by Leland Brown’s “texture shading” method: texture_shade(). This better defines ridges and drainage networks\r\nAmbient occlusion layer darkens the valleys to account for less scattered atmospheric light reaching the valley floor: ambient_shade()\r\n\r\nload the reuired packages\r\n\r\n\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\nlibrary(osmdata)\r\nlibrary(raster)\r\nlibrary(rayshader)\r\nlibrary(sf)\r\nlibrary(tmap)\r\n\r\n\r\n\r\nload the elevation data for area of interest and convert to a matrix\r\n\r\n\r\ndem <- raster(\"D:/spatial-data/dem/n30_e076_1arc_v3.tif\") |>\r\n  merge(raster(\"D:/spatial-data/dem/n30_e077_1arc_v3.tif\")) |> \r\n  crop(extent(76.8, 77.1, 30.6, 30.9))\r\n\r\ndem_mat <- raster_to_matrix(dem)\r\n\r\n\r\n\r\nBuild a base map with rayshader\r\n\r\n\r\ndem_mat |> \r\n  height_shade() |> \r\n  plot_map()\r\n\r\n\r\n\r\n\r\nadd a spherical aspect shading colour\r\n\r\n\r\ndem_mat |> \r\n  height_shade() |> \r\n  add_overlay(\r\n    sphere_shade(dem_mat, texture = \"desert\", zscale=4, colorintensity = 5), \r\n    alphalayer=0.5) |>\r\n  plot_map()\r\n\r\n\r\n\r\n\r\noverlay a standard hillshade or Lambertian (cosine) shading\r\n\r\n\r\ndem_mat |> \r\n  height_shade() |> \r\n  add_overlay(\r\n    sphere_shade(dem_mat, texture = \"desert\", zscale = 4, colorintensity = 5), \r\n    alphalayer = 0.5) |>\r\n  add_shadow(lamb_shade(dem_mat, zscale = 6), 0) |>\r\n  plot_map()\r\n\r\n\r\n\r\n\r\nadd shadows calculated by Leland Brown’s “texture shading” method\r\n\r\n\r\ndem_mat |> \r\n  height_shade() |> \r\n  add_overlay(\r\n    sphere_shade(dem_mat, texture = \"desert\", zscale = 4, colorintensity = 5), \r\n    alphalayer = 0.5) |>\r\n  add_shadow(lamb_shade(dem_mat, zscale = 6), 0) |>\r\n  add_shadow(texture_shade(dem_mat, detail = 8/10, contrast = 9, brightness = 11), \r\n             0.1) |>\r\n  plot_map()\r\n\r\n\r\n\r\n\r\nadd an ambient occlusion layer\r\n\r\n\r\nbase_map <- dem_mat |> \r\n  height_shade() |> \r\n  add_overlay(\r\n    sphere_shade(dem_mat, texture = \"desert\", zscale = 4, colorintensity = 5), \r\n    alphalayer = 0.5) |>\r\n  add_shadow(lamb_shade(dem_mat, zscale = 6), 0) |>\r\n  add_shadow(ambient_shade(dem_mat), 0) %>%\r\n  add_shadow(texture_shade(dem_mat, detail = 8/10, contrast = 9, brightness = 11), \r\n             0.1)\r\nbase_map |> plot_map()\r\n\r\n\r\n\r\n\r\nextract major roads from osm and add them\r\n\r\n\r\n# define a bounding box for area of interest\r\nosm_bbox <- c(76.8, 30.6, 77.1, 30.9) # xmin, ymin, xmax, ymax\r\n\r\n# extract highway from osm\r\n#dem_highway <- opq(osm_bbox) |> \r\n  #add_osm_feature(key = \"highway\") |> \r\n  #osmdata_sf()\r\n\r\n# filter major roads\r\n#trunk_roads <- dem_highway$osm_lines |> filter(highway == \"trunk\")\r\n#secondary_roads <- dem_highway$osm_lines |> filter(highway == \"secondary\")\r\n#st_write(trunk_roads, \"data/trunk_road.gpkg\")\r\n#st_write(secondary_roads, \"data/secondary_road.gpkg\")\r\n\r\ntrunk_roads <- st_read(\"data/trunk_road.gpkg\")\r\n\r\n\r\nReading layer `trunk_road' from data source \r\n  `D:\\R\\abhikumar86.github.io\\_posts\\2021-07-21-3d-map\\data\\trunk_road.gpkg' \r\n  using driver `GPKG'\r\nSimple feature collection with 188 features and 32 fields\r\nGeometry type: LINESTRING\r\nDimension:     XY\r\nBounding box:  xmin: 76.78954 ymin: 30.58918 xmax: 77.1175 ymax: 30.91891\r\nGeodetic CRS:  WGS 84\r\n\r\nsecondary_roads <- st_read(\"data/secondary_road.gpkg\")\r\n\r\n\r\nReading layer `secondary_road' from data source \r\n  `D:\\R\\abhikumar86.github.io\\_posts\\2021-07-21-3d-map\\data\\secondary_road.gpkg' \r\n  using driver `GPKG'\r\nSimple feature collection with 126 features and 32 fields\r\nGeometry type: LINESTRING\r\nDimension:     XY\r\nBounding box:  xmin: 76.75612 ymin: 30.59039 xmax: 77.12317 ymax: 30.9053\r\nGeodetic CRS:  WGS 84\r\n\r\n# remove dem_highway\r\nrm(dem_highway)\r\n\r\n# prepare the road layer for overlaying\r\nroads_layer <- generate_line_overlay(trunk_roads, extent = extent(76.8, 77.1, 30.6, 30.9),\r\n                          heightmap = dem_mat,\r\n                          linewidth = 5, color = \"white\") |>\r\n  add_overlay(\r\n    generate_line_overlay(secondary_roads, extent = extent(76.8, 77.1, 30.6, 30.9),\r\n                          heightmap = dem_mat,\r\n                          linewidth = 2.5, color = \"white\"))\r\n# add to base map\r\nbase_map |>\r\n  add_overlay(roads_layer) |>\r\n  plot_map()\r\n\r\n\r\n\r\n\r\nsimilarly extract waterways from osm and add them to base-map\r\n\r\n\r\n# define a bounding box for area of interest\r\nosm_bbox <- c(76.8, 30.6, 77.1, 30.9) # xmin, ymin, xmax, ymax\r\n\r\n# extract waterway (rivers) from osm\r\n#dem_water <- opq(osm_bbox) |> \r\n  #add_osm_feature(key = \"waterway\") |> \r\n  #osmdata_sf()\r\n\r\n# filter major river and streams\r\n#rivers <- dem_water$osm_lines |> filter(waterway == \"river\")\r\n#streams <- dem_water$osm_lines |> filter(waterway != \"river\")\r\n#st_write(rivers, \"data/rivers.gpkg\")\r\n#st_write(streams, \"data/streams.gpkg\")\r\n\r\nrivers <- st_read(\"data/rivers.gpkg\")\r\n\r\n\r\nReading layer `rivers' from data source \r\n  `D:\\R\\abhikumar86.github.io\\_posts\\2021-07-21-3d-map\\data\\rivers.gpkg' \r\n  using driver `GPKG'\r\nSimple feature collection with 30 features and 16 fields\r\nGeometry type: LINESTRING\r\nDimension:     XY\r\nBounding box:  xmin: 74.56863 ymin: 29.4721 xmax: 77.11868 ymax: 30.91332\r\nGeodetic CRS:  WGS 84\r\n\r\nstreams <- st_read(\"data/streams.gpkg\")\r\n\r\n\r\nReading layer `streams' from data source \r\n  `D:\\R\\abhikumar86.github.io\\_posts\\2021-07-21-3d-map\\data\\streams.gpkg' \r\n  using driver `GPKG'\r\nSimple feature collection with 41 features and 16 fields\r\nGeometry type: LINESTRING\r\nDimension:     XY\r\nBounding box:  xmin: 73.5626 ymin: 29.22947 xmax: 77.07197 ymax: 30.8885\r\nGeodetic CRS:  WGS 84\r\n\r\n# remove dem_water\r\n#rm(dem_water)\r\n\r\n# prepare the river and stream layer for overlaying\r\nstream_layer <- generate_line_overlay(rivers, extent = extent(76.8, 77.1, 30.6, 30.9),\r\n                          heightmap = dem_mat, linewidth = 8, color = \"skyblue2\") |>\r\n  add_overlay(\r\n    generate_line_overlay(streams, extent = extent(76.8, 77.1, 30.6, 30.9),\r\n                          heightmap = dem_mat, linewidth = 4, color = \"skyblue\"))\r\n# add to base map\r\nbase_map |>\r\n  add_overlay(stream_layer, alphalayer = 0.8) |>\r\n  add_overlay(roads_layer) |>\r\n  plot_map()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-07-21-3d-map/3d-map_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-07-23T01:04:04+05:30",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-08-13-ecology-packages/",
    "title": "R packages for Ecology",
    "description": "A list of useful `R` packages for ecology, biodiversity and conservation.",
    "author": [
      {
        "name": "Abhishek Kumar",
        "url": "https://akumar.netlify.app"
      }
    ],
    "date": "2021-08-13",
    "categories": [],
    "contents": "\r\n\r\n\r\nPackage\r\n\r\n\r\nDescription\r\n\r\n\r\nReference\r\n\r\n\r\nLinks\r\n\r\n\r\nadiv\r\n\r\n\r\nanalyse biodiversity in ecology\r\n\r\n\r\nPavoine (2020)\r\n\r\n\r\n\r\n\r\nBAT\r\n\r\n\r\nmeasurement and estimation of alpha and beta taxon, phylogenetic and functional diversity\r\n\r\n\r\nCardoso, Rigal, and Carvalho (2014)\r\n\r\n\r\n\r\n\r\nbetapart\r\n\r\n\r\npartitioning beta diversity into turnover and nestedness components\r\n\r\n\r\nBaselga and Orme (2012)\r\n\r\n\r\n\r\n\r\nbien\r\n\r\n\r\nBotanical Information and Ecology Network (BIEN) database\r\n\r\n\r\nMaitner et al. (2017)\r\n\r\n\r\n\r\n\r\nbiodivMapR\r\n\r\n\r\nmapping \\(\\alpha\\) and \\(\\beta\\) diversity from remotely sensed images\r\n\r\n\r\nFéret and Boissieu (2019)\r\n\r\n\r\nhttps://jbferet.github.io/biodivMapR/\r\n\r\n\r\nbiomass\r\n\r\n\r\nestimating above-ground biomass and its uncertainty in tropical forests\r\n\r\n\r\nRéjou-Méchain et al. (2017)\r\n\r\n\r\n\r\n\r\nConR\r\n\r\n\r\nlarge-scale multispecies preliminary conservation assessments using distribution data\r\n\r\n\r\nDauby et al. (2017)\r\n\r\n\r\n\r\n\r\necospat\r\n\r\n\r\nspatial analyses and modeling of species niches and distributions\r\n\r\n\r\nCola et al. (2017)\r\n\r\n\r\nhttps://www.unil.ch/ecospat/home/menuguid/ecospat-resources/tools.html\r\n\r\n\r\nENMTools\r\n\r\n\r\ntoolbox for ecological niche modelling in comparative ecological biogeography\r\n\r\n\r\nWarren et al. (2021)\r\n\r\n\r\nhttps://github.com/danlwarren/ENMTools\r\n\r\n\r\nForestFit\r\n\r\n\r\nbayesian modeling for plant height diameter data\r\n\r\n\r\nTeimouri, Doser, and Finley (2020)\r\n\r\n\r\n\r\n\r\nForestGapR\r\n\r\n\r\nforest gap analysis from canopy height models\r\n\r\n\r\nSilva et al. (2019)\r\n\r\n\r\n\r\n\r\nGapAnalysis\r\n\r\n\r\ncalculation of conservation indicators using spatial information\r\n\r\n\r\nCarver et al. (2021)\r\n\r\n\r\nhttps://github.com/CIAT-DAPA/GapAnalysis\r\n\r\n\r\ngeodiv\r\n\r\n\r\ngradient surface metrics to provide continuous measures of landscape heterogeneity\r\n\r\n\r\nSmith et al. (2021)\r\n\r\n\r\n\r\n\r\ngeoorigin\r\n\r\n\r\ntrait mapping and geographic provenancing of specimens without categorical constraints\r\n\r\n\r\nHulme-Beaman et al. (2020)\r\n\r\n\r\n\r\n\r\nGerminaR\r\n\r\n\r\ngermination analysis for plants\r\n\r\n\r\nLozano-Isla, Benites-Alfaro, and Pompelli (2019)\r\n\r\n\r\n\r\n\r\nHistMapR\r\n\r\n\r\nRapid digitization of historical land-use maps in R\r\n\r\n\r\nAuffret et al. (2017)\r\n\r\n\r\nhttps://github.com/AGAuffret/HistMapR\r\n\r\n\r\nHmsc\r\n\r\n\r\nHierarchical Modelling of Species Communities with Joint species distribution models\r\n\r\n\r\nTikhonov et al. (2020)\r\n\r\n\r\nhttps://github.com/hmsc-r/HMSC\r\n\r\n\r\nletsR\r\n\r\n\r\ndata handling and analysis in macroecology\r\n\r\n\r\nVilela and Villalobos (2015)\r\n\r\n\r\n\r\n\r\nMBHdesign\r\n\r\n\r\nEfficient spatial survey design\r\n\r\n\r\nFoster (2020)\r\n\r\n\r\n\r\n\r\nMIAmaxent\r\n\r\n\r\nVariable transformation and model selection for species distribution models\r\n\r\n\r\nVollering, Halvorsen, and Mazzoni (2019)\r\n\r\n\r\n\r\n\r\nmobsim\r\n\r\n\r\nsimulation and measurement of biodiversity across spatial scales\r\n\r\n\r\nMay et al. (2018)\r\n\r\n\r\n\r\n\r\nNicheMapR\r\n\r\n\r\nbiophysical modelling: the microclimate model\r\n\r\n\r\nKearney and Porter (2016)\r\n\r\n\r\nhttps://mrke.github.io/\r\n\r\n\r\nnlstimedist\r\n\r\n\r\nquantification of unimodal phenology distributions\r\n\r\n\r\nSteer, Ramsay, and Franco (2019)\r\n\r\n\r\n\r\n\r\nntbox\r\n\r\n\r\nmodelling and evaluating multidimensional ecological niches\r\n\r\n\r\nOsorio-Olvera et al. (2020)\r\n\r\n\r\nhttps://luismurao.github.io/ntbox_user_guide.html\r\n\r\n\r\nphyloregion\r\n\r\n\r\nbiogeographical regionalization and macroecology\r\n\r\n\r\nDaru, Karunarathne, and Schliep (2020)\r\n\r\n\r\nhttps://phyloregion.com/\r\n\r\n\r\nphyr\r\n\r\n\r\nphylogenetic species-distribution modelling in ecological communities\r\n\r\n\r\nLi et al. (2020)\r\n\r\n\r\nhttps://daijiang.github.io/phyr/\r\n\r\n\r\nR2MCDS\r\n\r\n\r\nanalysis of multi-species datasets collected using distance sampling\r\n\r\n\r\nBolduc, Roy, and Rousseu (2018)\r\n\r\n\r\nhttps://github.com/RoyChristian/R2MCDS\r\n\r\n\r\nRangeShiftR\r\n\r\n\r\nindividual-based simulation of spatial eco-evolutionary dynamics and species’ responses to environmental changes\r\n\r\n\r\nMalchow et al. (2021)\r\n\r\n\r\nhttps://rangeshifter.github.io/RangeshiftR-tutorials/\r\n\r\n\r\nrasterdiv\r\n\r\n\r\nmeasuring ecosystem heterogeneity from space\r\n\r\n\r\nRocchini et al. (2021)\r\n\r\n\r\nhttps://github.com/mattmar/rasterdiv\r\n\r\n\r\nred\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nsars\r\n\r\n\r\nfitting, evaluating and comparing species–area relationship models\r\n\r\n\r\nMatthews et al. (2019)\r\n\r\n\r\n\r\n\r\nsegRDA\r\n\r\n\r\npiecewise redundancy analysis\r\n\r\n\r\nVieira et al. (2019)\r\n\r\n\r\n\r\n\r\nspatialwarnings\r\n\r\n\r\nMonitoring ecosystem degradation using spatial data\r\n\r\n\r\nGénin et al. (2018)\r\n\r\n\r\n\r\n\r\nssdm\r\n\r\n\r\npredict distribution of species richness and composition based on stacked species distribution models\r\n\r\n\r\nSchmitt et al. (2017)\r\n\r\n\r\nhttps://github.com/sylvainschmitt/SSDM\r\n\r\n\r\nSSP\r\n\r\n\r\nestimation of sampling effort in studies of ecological communities\r\n\r\n\r\nGuerra-Castro et al. (2021)\r\n\r\n\r\nhttps://github.com/edlinguerra/SSP\r\n\r\n\r\nV.PhyloMaker\r\n\r\n\r\ngenerate very large phylogenies for vascular plants\r\n\r\n\r\nJin and Qian (2019)\r\n\r\n\r\n\r\n\r\nVoCC\r\n\r\n\r\nvelocity of climate change and related climatic metrics\r\n\r\n\r\nMolinos et al. (2019)\r\n\r\n\r\n\r\n\r\nwallace\r\n\r\n\r\nreproducible modeling of species niches and distributions\r\n\r\n\r\nKass et al. (2018)\r\n\r\n\r\nhttps://wallaceecomod.github.io/\r\n\r\n\r\nzoon\r\n\r\n\r\nreproducible and shareable species distribution modelling\r\n\r\n\r\nGolding et al. (2017)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nAuffret, Alistair G., Adam Kimberley, Jan Plue, Helle Skånes, Simon Jakobsson, Emelie Waldén, Marika Wennbom, et al. 2017. “HistMapR: Rapid Digitization of Historical Land-Use Maps in R.” Methods in Ecology and Evolution 8 (11): 1453–57. https://doi.org/10.1111/2041-210x.12788.\r\n\r\n\r\nBaselga, Andrés, and C. David L. Orme. 2012. “betapart: An R Package for the Study of Beta Diversity.” Methods in Ecology and Evolution 3 (5): 808–12. https://doi.org/10.1111/j.2041-210x.2012.00224.x.\r\n\r\n\r\nBolduc, François, Christian Roy, and François Rousseu. 2018. “R2mcds: An R Package for the Analysis of Multi-Species Datasets Collected Using Distance Sampling.” Ecological Informatics 47: 23–25. https://doi.org/10.1016/j.ecoinf.2017.10.003.\r\n\r\n\r\nCardoso, Pedro, François Rigal, and José C. Carvalho. 2014. “BAT Biodiversity Assessment Tools, an R Package for the Measurement and Estimation of Alpha and Beta Taxon, Phylogenetic and Functional Diversity.” Methods in Ecology and Evolution 6 (2): 232–36. https://doi.org/10.1111/2041-210x.12310.\r\n\r\n\r\nCarver, Daniel, Chrystian C. Sosa, Colin K. Khoury, Harold A. Achicanoy, Maria Victoria Diaz, Steven Sotelo, Nora P. Castañeda-Álvarez, and Julian Ramirez-Villegas. 2021. “GapAnalysis: An R Package to Calculate Conservation Indicators Using Spatial Information.” Ecography 44 (7): 1000–1009. https://doi.org/10.1111/ecog.05430.\r\n\r\n\r\nCola, Valeria Di, Olivier Broennimann, Blaise Petitpierre, Frank T. Breiner, Manuela DAmen, Christophe Randin, Robin Engler, et al. 2017. “ecospat: An R Package to Support Spatial Analyses and Modeling of Species Niches and Distributions.” Ecography 40 (6): 774–87. https://doi.org/10.1111/ecog.02671.\r\n\r\n\r\nDaru, Barnabas H., Piyal Karunarathne, and Klaus Schliep. 2020. “phyloregion: R Package for Biogeographical Regionalization and Macroecology.” Methods in Ecology and Evolution 11 (11): 1483–91. https://doi.org/10.1111/2041-210x.13478.\r\n\r\n\r\nDauby, Gilles, Tariq Stévart, Vincent Droissart, Ariane Cosiaux, Vincent Deblauwe, Murielle Simo-Droissart, Marc S. M. Sosef, et al. 2017. “ConR: An R Package to Assist Large-Scale Multispecies Preliminary Conservation Assessments Using Distribution Data.” Ecology and Evolution 7 (24): 11292–303. https://doi.org/10.1002/ece3.3704.\r\n\r\n\r\nFéret, Jean-Baptiste, and Florian Boissieu. 2019. “biodivMapR: An R Package for \\(\\alpha\\)- and \\(\\beta\\)-Diversity Mapping Using Remotely Sensed Images.” Methods in Ecology and Evolution 11 (1): 64–70. https://doi.org/10.1111/2041-210x.13310.\r\n\r\n\r\nFoster, Scott D. 2020. “MBHdesign: An R-package for Efficient Spatial Survey Designs.” Methods in Ecology and Evolution 12 (3): 415–20. https://doi.org/10.1111/2041-210x.13535.\r\n\r\n\r\nGénin, Alexandre, Sabiha Majumder, Sumithra Sankaran, Alain Danet, Vishwesha Guttal, Florian D. Schneider, and Sonia Kéfi. 2018. “Monitoring Ecosystem Degradation Using Spatial Data and the R Package spatialwarnings.” Methods in Ecology and Evolution 9 (10): 2067–75. https://doi.org/10.1111/2041-210x.13058.\r\n\r\n\r\nGolding, Nick, Tom A. August, Tim C. D. Lucas, David J. Gavaghan, E. Emiel Loon, and Greg McInerny. 2017. “The zoon R Package for Reproducible and Shareable Species Distribution Modelling.” Methods in Ecology and Evolution 9 (2): 260–68. https://doi.org/10.1111/2041-210x.12858.\r\n\r\n\r\nGuerra-Castro, Edlin J., Juan Carlos Cajas, Nuno Simões, Juan J. Cruz-Motta, and Maite Mascaró. 2021. “SSP: An R Package to Estimate Sampling Effort in Studies of Ecological Communities.” Ecography 44 (4): 561–73. https://doi.org/10.1111/ecog.05284.\r\n\r\n\r\nHulme-Beaman, Ardern, Anna Rudzinski, Joseph E. J. Cooper, Robert F. Lachlan, Keith Dobney, and Mark G. Thomas. 2020. “geoorigins: A New Method and R Package for Trait Mapping and Geographic Provenancing of Specimens Without Categorical Constraints.” Methods in Ecology and Evolution 11 (10): 1247–57. https://doi.org/10.1111/2041-210x.13444.\r\n\r\n\r\nJin, Yi, and Hong Qian. 2019. “V.PhyloMaker: An R Package That Can Generate Very Large Phylogenies for Vascular Plants.” Ecography 42 (8): 1353–59. https://doi.org/10.1111/ecog.04434.\r\n\r\n\r\nKass, Jamie M., Bruno Vilela, Matthew E. Aiello-Lammens, Robert Muscarella, Cory Merow, and Robert P. Anderson. 2018. “wallace: A Flexible Platform for Reproducible Modeling of Species Niches and Distributions Built for Community Expansion.” Methods in Ecology and Evolution 9 (4): 1151–56. https://doi.org/10.1111/2041-210x.12945.\r\n\r\n\r\nKearney, Michael R., and Warren P. Porter. 2016. “NicheMapR  an R Package for Biophysical Modelling: The Microclimate Model.” Ecography 40 (5): 664–74. https://doi.org/10.1111/ecog.02360.\r\n\r\n\r\nLi, Daijiang, Russell Dinnage, Lucas A. Nell, Matthew R. Helmus, and Anthony R. Ives. 2020. “phyr: An R Package for Phylogenetic Species-Distribution Modelling in Ecological Communities.” Methods in Ecology and Evolution 11 (11): 1455–63. https://doi.org/10.1111/2041-210x.13471.\r\n\r\n\r\nLozano-Isla, Flavio, Omar E. Benites-Alfaro, and Marcelo F. Pompelli. 2019. “GerminaR: An R Package for Germination Analysis with the Interactive Web Application “GerminaQuant for r”.” Ecological Research 34 (2): 339–46. https://doi.org/10.1111/1440-1703.1275.\r\n\r\n\r\nMaitner, Brian S., Brad Boyle, Nathan Casler, Rick Condit, John Donoghue, Sandra M. Durán, Daniel Guaderrama, et al. 2017. “The bien R Package: A Tool to Access the Botanical Information and Ecology Network (BIEN) Database.” Methods in Ecology and Evolution 9 (2): 373–79. https://doi.org/10.1111/2041-210x.12861.\r\n\r\n\r\nMalchow, Anne-Kathleen, Greta Bocedi, Stephen C. F. Palmer, Justin M. J. Travis, and Damaris Zurell. 2021. “RangeShiftR: An R Package for Individual-Based Simulation of Spatial Eco-Evolutionary Dynamics and Species Responses to Environmental Changes.” Ecography. https://doi.org/10.1111/ecog.05689.\r\n\r\n\r\nMatthews, Thomas J., Kostas A. Triantis, Robert J. Whittaker, and François Guilhaumon. 2019. “sars: An R Package for Fitting, Evaluating and Comparing Speciesarea Relationship Models.” Ecography 42 (8): 1446–55. https://doi.org/10.1111/ecog.04271.\r\n\r\n\r\nMay, Felix, Katharina Gerstner, Daniel J. McGlinn, Xiao Xiao, and Jonathan M. Chase. 2018. “mobsim: An R Package for the Simulation and Measurement of Biodiversity Across Spatial Scales.” Methods in Ecology and Evolution 9 (6): 1401–8. https://doi.org/10.1111/2041-210x.12986.\r\n\r\n\r\nMolinos, Jorge Garcı́a, David S. Schoeman, Christopher J. Brown, and Michael T. Burrows. 2019. “VoCC: An R Package for Calculating the Velocity of Climate Change and Related Climatic Metrics.” Methods in Ecology and Evolution 10 (12): 2195–2202. https://doi.org/10.1111/2041-210x.13295.\r\n\r\n\r\nOsorio-Olvera, Luis, Andrés Lira-Noriega, Jorge Soberón, Andrew Townsend Peterson, Manuel Falconi, Rusby G. Contreras-Dı́az, Enrique Martı́nez-Meyer, Vijay Barve, and Narayani Barve. 2020. “ntbox: An R Package with Graphical User Interface for Modelling and Evaluating Multidimensional Ecological Niches.” Methods in Ecology and Evolution 11 (10): 1199–1206. https://doi.org/10.1111/2041-210x.13452.\r\n\r\n\r\nPavoine, Sandrine. 2020. “adiv: An R Package to Analyse Biodiversity in Ecology.” Methods in Ecology and Evolution 11 (9): 1106–12. https://doi.org/10.1111/2041-210x.13430.\r\n\r\n\r\nRéjou-Méchain, Maxime, Ariane Tanguy, Camille Piponiot, Jérôme Chave, and Bruno Hérault. 2017. “biomass: An R Package for Estimating Above-Ground Biomass and Its Uncertainty in Tropical Forests.” Methods in Ecology and Evolution 8 (9): 1163–67. https://doi.org/10.1111/2041-210x.12753.\r\n\r\n\r\nRocchini, Duccio, Elisa Thouverai, Matteo Marcantonio, Martina Iannacito, Daniele Da Re, Michele Torresani, Giovanni Bacaro, et al. 2021. “rasterdivan Information Theory Tailored R Package for Measuring Ecosystem Heterogeneity from Space: To the Origin and Back.” Methods in Ecology and Evolution 12 (6): 1093–1102. https://doi.org/10.1111/2041-210x.13583.\r\n\r\n\r\nSchmitt, Sylvain, Robin Pouteau, Dimitri Justeau, Florian Boissieu, and Philippe Birnbaum. 2017. “ssdm: An R Package to Predict Distribution of Species Richness and Composition Based on Stacked Species Distribution Models.” Methods in Ecology and Evolution 8 (12): 1795–1803. https://doi.org/10.1111/2041-210x.12841.\r\n\r\n\r\nSilva, Carlos A., Ruben Valbuena, Ekena R. Pinagé, Midhun Mohan, Danilo R. A. Almeida, Eben North Broadbent, Wan Shafrina Wan Mohd Jaafar, Daniel Papa, Adrian Cardil, and Carine Klauberg. 2019. “ForestGapR: An R Package for Forest Gap Analysis from Canopy Height Models.” Methods in Ecology and Evolution 10 (8): 1347–56. https://doi.org/10.1111/2041-210x.13211.\r\n\r\n\r\nSmith, Annie C., Kyla M. Dahlin, Sydne Record, Jennifer K. Costanza, Adam M. Wilson, and Phoebe L. Zarnetske. 2021. “The geodiv R Package: Tools for Calculating Gradient Surface Metrics.” Methods in Ecology and Evolution. https://doi.org/10.1111/2041-210x.13677.\r\n\r\n\r\nSteer, Nicola C., Paul M. Ramsay, and Miguel Franco. 2019. “nlstimedist: An R Package for the Biologically Meaningful Quantification of Unimodal Phenology Distributions.” Methods in Ecology and Evolution 10 (11): 1934–40. https://doi.org/10.1111/2041-210x.13293.\r\n\r\n\r\nTeimouri, Mahdi, Jeffrey W. Doser, and Andrew O. Finley. 2020. “ForestFit: An R Package for Modeling Plant Size Distributions.” Environmental Modelling & Software 131: 104668. https://doi.org/10.1016/j.envsoft.2020.104668.\r\n\r\n\r\nTikhonov, Gleb, Øystein H. Opedal, Nerea Abrego, Aleksi Lehikoinen, Melinda M. J. Jonge, Jari Oksanen, and Otso Ovaskainen. 2020. “Joint Species Distribution Modelling with the R-package Hmsc.” Methods in Ecology and Evolution 11 (3): 442–47. https://doi.org/10.1111/2041-210x.13345.\r\n\r\n\r\nVieira, Danilo Cândido, Marco Colossi Brustolin, Fábio Cop Ferreira, and Gustavo Fonseca. 2019. “segRDA: An R Package for Performing Piecewise Redundancy Analysis.” Methods in Ecology and Evolution 10 (12): 2189–94. https://doi.org/10.1111/2041-210x.13300.\r\n\r\n\r\nVilela, Bruno, and Fabricio Villalobos. 2015. “letsR: A New R Package for Data Handling and Analysis in Macroecology.” Methods in Ecology and Evolution 6 (10): 1229–34. https://doi.org/10.1111/2041-210x.12401.\r\n\r\n\r\nVollering, Julien, Rune Halvorsen, and Sabrina Mazzoni. 2019. “The MIAmaxent R Package: Variable Transformation and Model Selection for Species Distribution Models.” Ecology and Evolution 9 (21): 12051–68. https://doi.org/10.1002/ece3.5654.\r\n\r\n\r\nWarren, Dan L., Nicholas J. Matzke, Marcel Cardillo, John B. Baumgartner, Linda J. Beaumont, Michael Turelli, Richard E. Glor, et al. 2021. “ENMTools 1.0: An R Package for Comparative Ecological Biogeography.” Ecography 44 (4): 504–11. https://doi.org/10.1111/ecog.05485.\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-09-01T23:05:13+05:30",
    "input_file": {}
  },
  {
    "path": "posts/2021-07-21-singrauli-map/",
    "title": "Singrauli Map",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Abhishek Kumar",
        "url": "https://akumar.netlify.app"
      }
    ],
    "date": "2021-07-21",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nLoad the packages\r\nPrepare a base hillshade\r\nadd water element\r\nadd major roads\r\nadd coal mine boundaries\r\nprepare inset map\r\nfinal main map\r\narrange and save the final maps\r\n\r\n\r\nLoad the packages\r\n\r\n\r\nShow code\r\n\r\nlibrary(dplyr)\r\nlibrary(grid) # arranging inset maps\r\nlibrary(OpenStreetMap) # OSM Maps and data\r\nlibrary(osmdata) # osm data download\r\nlibrary(raster) # raster data and operations\r\nlibrary(sf) # simple features for spatial data\r\nlibrary(tmap) # thematic mapping\r\nlibrary(tmaptools) \r\n\r\n\r\n\r\nPrepare a base hillshade\r\n\r\n\r\nShow code\r\n\r\nbb <- c(82.48, 24.1, 82.8, 24.2) # extent for target site as left, bottom, right, upper\r\n\r\n#dem <- getData(name = \"SRTM\", lon = 84, lat = 24, path = \"./dem/\") # download data from SRTM\r\n\r\n#dem_crop <- dem %>% crop(extent(82.48, 82.8, 24.1, 24.2)) # cropped to target site\r\n#rm(dem) # remove dem from environment\r\n\r\n#slope <- terrain(dem_crop, opt= \"slope\") # extract slope from dem_crop\r\n#aspect <- terrain(dem_crop, opt= \"aspect\") # extract aspect from dem_crop\r\n#dem_hs <- hillShade(slope = slope, aspect = aspect, angle = 45, direction = 315) # prepare hill shade\r\n# 45 altitude angle and 315 azimuth angle\r\n\r\n#writeRaster(x = dem_hs, filename = \"./data/dem_hs.tif\", overwrite = T) # write to local directory\r\n#rm(slope, aspect) # removed slope and aspect files\r\n\r\nhs <- raster(\"./data/dem_hs.tif\") # read the hillshade file\r\n\r\ntm_shape(hs) + \r\n      tm_raster(palette = \"-Greys\", n = 100, style = \"cont\", alpha = 0.7,\r\n                         legend.show = FALSE)\r\n\r\n\r\n\r\n\r\nadd water element\r\n\r\n\r\nShow code\r\n\r\n# https://storage.googleapis.com/earthenginepartners-hansen/GFC-2019-v1.7/Hansen_GFC-2019-v1.7_datamask_30N_080E.tif\r\n\r\n#water <- raster(\"./data/Hansen_GFC2014_datamask_30N_080E.tif\") %>% \r\n      #crop(extent(82.48, 82.8, 24.1, 24.2)) %>% \r\n      #calc(fun = function(x){x[x == 1] <- NA; return(x)})\r\n#writeRaster(x = water, filename = \"./data/singrauli-water.tif\", overwrite = T) # write to local directory\r\n\r\nwater <- raster(\"./data/singrauli-water.tif\") # read the hillshade file\r\n\r\n# colors for water #4a80f5, #9bbff4, #a7cdf2, #AADAFF\r\n\r\ntm_shape(hs) + \r\n      tm_raster(palette = \"-Greys\", n = 100, style = \"cont\", alpha = 0.7,\r\n                         legend.show = FALSE) + # hillshade\r\n      tm_shape(water) + \r\n      tm_raster(palette = c(\"#9bbff4\"), style = \"cat\", legend.show = FALSE)  # water\r\n\r\n\r\n\r\n\r\nadd major roads\r\n\r\n\r\nShow code\r\n\r\n#s_roads <- opq(bbox = bb) %>% # xmin, ymin, xmax, ymax\r\n      #add_osm_feature(key = \"highway\", value = c(\"trunk\")) %>% \r\n      #osmdata_sf()\r\n#s_roads <- s_roads$osm_lines\r\n#st_write(s_roads, \"./data/singrauli-road/singrauli-road.shp\")\r\n\r\ns_roads <- st_read(\"./data/singrauli-road/singrauli-road.shp\")\r\n\r\n\r\nReading layer `singrauli-road' from data source \r\n  `D:\\R\\abhikumar86.github.io\\_posts\\2021-07-21-singrauli-map\\data\\singrauli-road\\singrauli-road.shp' \r\n  using driver `ESRI Shapefile'\r\nSimple feature collection with 30 features and 9 fields\r\nGeometry type: LINESTRING\r\nDimension:     XY\r\nBounding box:  xmin: 82.4536 ymin: 24.08979 xmax: 82.77473 ymax: 24.20791\r\nGeodetic CRS:  GCS_unknown\r\n\r\nShow code\r\n\r\ns_roads <- s_roads %>% st_set_crs(4326)\r\n\r\ntm_shape(hs) + tm_raster(palette = \"-Greys\", n = 100, style = \"cont\", alpha = 0.7,\r\n                         legend.show = FALSE) + # hillshade\r\n      \r\n      tm_shape(water) + tm_raster(palette = c(\"#9bbff4\"), style = \"cat\",  \r\n                            legend.show = FALSE) + # water\r\n      \r\n      tm_shape(s_roads) + tm_lines(col = \"ref\", palette = c(\"grey50\", \"grey40\"),\r\n                                   lwd = 2.5, legend.col.show = FALSE) # roads\r\n\r\n\r\n\r\n\r\nadd coal mine boundaries\r\n\r\n\r\nShow code\r\n\r\n#s_mines <- opq(bbox = bb) %>% # xmin, ymin, xmax, ymax\r\n       #add_osm_feature(key = \"landuse\", value = \"quarry\") %>% \r\n       #osmdata_sf()\r\n#s_mines <- s_mines$osm_polygons\r\n#st_write(s_mines, \"./data/singrauli-mines/singrauli-mines.shp\")\r\n\r\n# coal mines\r\ncm <- st_read(\"./data/singrauli-mines/singrauli-mines.shp\") \r\n\r\n\r\nReading layer `singrauli-mines' from data source \r\n  `D:\\R\\abhikumar86.github.io\\_posts\\2021-07-21-singrauli-map\\data\\singrauli-mines\\singrauli-mines.shp' \r\n  using driver `ESRI Shapefile'\r\nSimple feature collection with 10 features and 5 fields\r\nGeometry type: POLYGON\r\nDimension:     XY\r\nBounding box:  xmin: 82.54869 ymin: 24.11217 xmax: 82.77247 ymax: 24.21588\r\nGeodetic CRS:  GCS_unknown\r\n\r\nShow code\r\n\r\ncm$mine <- c(\"Khadia\", \"\", \"Bina\", \"Amlohri\", \"Dudhichua\", \"\", \r\n             \"Jhingurdah\", \"Kakri\", \"Nigahi\", \"Block-B\")\r\n\r\n# jayant mine\r\ncmj <- cm %>% dplyr::filter(name == \"Jayant Mine\") \r\ncmj$mine <- \"Jayant\"\r\n\r\ntm_shape(hs) + tm_raster(palette = \"-Greys\", n = 100, style = \"cont\", alpha = 0.7,\r\n                         legend.show = FALSE) + # hillshade\r\n      \r\n      tm_shape(water) + tm_raster(palette = c(\"#9bbff4\"), style = \"cat\",  \r\n                            legend.show = FALSE) + # water\r\n      \r\n      tm_shape(s_roads) + tm_lines(col = \"ref\", palette = c(\"grey50\", \"grey40\"),\r\n                                   lwd = 2.5, legend.col.show = FALSE) + # roads\r\n      tm_shape(cm) + \r\n      tm_fill(col = \"yellow\", alpha = 0.1) + \r\n      tm_borders(col = \"grey50\") +\r\n      tm_text(text = \"mine\") + # coal mine shapes\r\n      \r\n      tm_shape(cmj) + tm_fill(col = \"yellow\", alpha = 0.5) + \r\n      tm_text(text = \"mine\") +\r\n      tm_borders(col = \"black\")  # Jayant Mine shape\r\n\r\n\r\n\r\n\r\nprepare inset map\r\nhttps://map.igismap.com/gis-data/india/administrative_state_boundary?utm_source=website&utm_medium=datadownload&utm_campaign=india\r\nhttps://map.igismap.com/gis-data/india/administrative_assembly_constituencies_boundary?utm_source=website&utm_medium=datadownload&utm_campaign=india\r\n\r\n\r\nShow code\r\n\r\n# https://www.naturalearthdata.com/download/50m/cultural/ne_50m_admin_0_countries.zip\r\nworld_adm <- st_read(\"D:/spatial-data/admin/ne_world_adm/ne_50m_admin_0_countries.shp\")\r\n\r\n\r\nReading layer `ne_50m_admin_0_countries' from data source \r\n  `D:\\spatial-data\\admin\\ne_world_adm\\ne_50m_admin_0_countries.shp' \r\n  using driver `ESRI Shapefile'\r\nSimple feature collection with 241 features and 94 fields\r\nGeometry type: MULTIPOLYGON\r\nDimension:     XY\r\nBounding box:  xmin: -180 ymin: -89.99893 xmax: 180 ymax: 83.59961\r\nGeodetic CRS:  WGS 84\r\n\r\nShow code\r\n\r\n# Indian states\r\nind_adm <- st_read(\"D:/spatial-data/admin/ind_adm1/ind_adm1.shp\")\r\n\r\n\r\nReading layer `ind_adm1' from data source \r\n  `D:\\spatial-data\\admin\\ind_adm1\\ind_adm1.shp' using driver `ESRI Shapefile'\r\nSimple feature collection with 37 features and 4 fields\r\nGeometry type: MULTIPOLYGON\r\nDimension:     XY\r\nBounding box:  xmin: 68.09348 ymin: 6.754368 xmax: 97.4115 ymax: 37.07761\r\nGeodetic CRS:  WGS 84\r\n\r\nShow code\r\n\r\n# https://map.igismap.com/gis-data/india/administrative_outline_boundary?utm_source=website&utm_medium=datadownload&utm_campaign=india\r\n\r\nind_adm0 <- st_read(\"D:/spatial-data/admin/ind_adm0/ind_adm0.shp\")\r\n\r\n\r\nReading layer `ind_adm0' from data source \r\n  `D:\\spatial-data\\admin\\ind_adm0\\ind_adm0.shp' using driver `ESRI Shapefile'\r\nSimple feature collection with 1 feature and 4 fields\r\nGeometry type: MULTIPOLYGON\r\nDimension:     XY\r\nBounding box:  xmin: 68.18625 ymin: 6.755953 xmax: 97.41529 ymax: 37.07827\r\nGeodetic CRS:  WGS 84\r\n\r\nShow code\r\n\r\n#s_bb <- bb_poly(hs, projection = 4326) # bounding box \r\n\r\ns_bb <- st_bbox(obj = c(xmin = 81.5, xmax = 83.5, ymin = 23.5, ymax = 24.5),\r\n                    crs = st_crs(hs)) %>% \r\n      st_as_sfc()\r\n\r\ninset_map <- tm_shape(world_adm, bbox = st_bbox(ind_adm)) + \r\n      tm_fill(col = \"grey95\") +\r\n      \r\n      tm_shape(ind_adm) + tm_fill(col = \"grey90\") + tm_borders(col = \"grey70\", lwd = 0.5) +\r\n      \r\n      tm_shape(ind_adm0) + tm_borders(lwd = 0.75) +\r\n      \r\n      tm_shape(s_bb) + tm_borders(col = \"red\", lwd = 0.75) +\r\n      \r\n      tm_layout(bg.color = \"#9bbff4\", frame = \"grey85\")\r\n\r\n#rm(cm, cmj, hs, ind_adm, ind_adm0, s_bb, s_roads, water, world_adm) # remove undesired files\r\n\r\n\r\n\r\naspect ratios for main map and inset map\r\n\r\n\r\nShow code\r\n\r\n# aspect ratio for main map\r\nxy <- st_bbox(hs)\r\nasp <- (xy$ymax - xy$ymin)/(xy$xmax - xy$xmin) \r\n\r\n# aspect ratio inset map\r\nxy <- st_bbox(ind_adm)\r\nasp2 <- (xy$ymax - xy$ymin)/(xy$xmax - xy$xmin)\r\n\r\n\r\n\r\nfinal main map\r\n\r\n\r\nShow code\r\n\r\nmain_map <- tm_shape(hs) + \r\n      tm_raster(palette = \"-Greys\", n = 100, style = \"cont\", alpha = 0.7,\r\n                legend.show = FALSE) + # hillshade\r\n      \r\n      tm_graticules(col = \"grey80\") + # graticules\r\n      \r\n      tm_shape(water) + \r\n      tm_raster(palette = c(\"#9bbff4\"), style = \"cat\", legend.show = FALSE) + # water\r\n      \r\n      tm_shape(s_roads) + \r\n      tm_lines(col = \"grey50\", lwd = 2.5) + # roads\r\n      \r\n      tm_shape(cm) + \r\n      tm_fill(col = \"yellow\", alpha = 0.1) + \r\n      tm_borders(col = \"grey50\") +\r\n      tm_text(text = \"mine\") + # coal mine shapes\r\n      \r\n      tm_shape(cmj) + tm_fill(col = \"yellow\", alpha = 0.5) + \r\n      tm_text(text = \"mine\") +\r\n      tm_borders(col = \"black\") + # Jayant Mine shape\r\n      \r\n      tm_compass(position = c(\"right\", \"top\")) + # North Arrow\r\n      \r\n      tm_scale_bar(position = c(0.6, 0.015), breaks = c(0, 2.5, 5, 7.5, 10)) + # scale\r\n      \r\n      tm_add_legend(type = \"fill\", labels = \"Coal Mine\", col = \"yellow\", alpha = 0.1,\r\n                    border.col = \"grey50\") + # mine legend\r\n      tm_add_legend(type = \"line\", labels = \"Road\", col = \"grey50\", lwd = 2.5) + # road legend\r\n      tm_add_legend(type = \"fill\", labels = \"Water\", col = \"#9bbff4\", border.col = NA) + # water legend\r\n      \r\n      tm_layout(legend.position = c(0.0035, 0.01), legend.width = 0.6, legend.height = 0.6*asp2,\r\n                legend.bg.color = \"white\", legend.bg.alpha = 0.9,\r\n                legend.text.size = 0.75, legend.frame = \"grey85\")\r\n\r\nmain_map\r\n\r\n\r\n\r\n\r\narrange and save the final maps\r\n# Create viewport\r\nvp <- viewport(x = 0.115, y = 0.98, width = unit(1, \"inches\"), \r\n               height = unit(1*asp2, \"inches\"), just = c(\"left\", \"top\"))\r\n\r\n# save the map\r\ntmap_save(main_map, filename = \"./data/singrauli-map.png\", insets_tm = inset_map, \r\n          insets_vp = vp, height = asp*7, width = 7, units = \"in\", dpi = 300)\r\n\r\n# save map in pdf\r\ntmap_save(main_map, filename = \"./data/singrauli-map.pdf\", insets_tm = inset_map, \r\n          insets_vp = vp, height = asp*7, width = 7, units = \"in\", dpi = 300)\r\n\r\n\r\nShow code\r\n\r\nknitr::include_graphics(\"./data/singrauli-map.png\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-07-21-singrauli-map/singrauli-map_files/figure-html5/hillshade-1.png",
    "last_modified": "2021-07-21T01:29:03+05:30",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to Abhishek Kumar",
    "description": "Welcome to our new blog, Abhishek Kumar. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Abhishek Kumar",
        "url": "https://akumar.netlify.app"
      }
    ],
    "date": "2021-07-21",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-07-21T01:12:12+05:30",
    "input_file": {}
  }
]
